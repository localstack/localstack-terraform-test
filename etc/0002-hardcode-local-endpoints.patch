diff --git a/internal/conns/conns.go b/internal/conns/conns.go
index 4d296f35ed..98bd36e2e8 100644
--- a/internal/conns/conns.go
+++ b/internal/conns/conns.go
@@ -1201,6 +1201,21 @@ func (client *AWSClient) RegionalHostname(prefix string) string {
 	return fmt.Sprintf("%s.%s.%s", prefix, client.Region, client.DNSSuffix)
 }

+// XXX: added by whummer
+func GetLocalEndpoints() map[string]string {
+	const localEndpoint = "http://localhost:4566"
+	// var localEndpoints map[string]string
+	var localEndpoints = map[string]string{}
+	for _, name := range HCLKeys() {
+		if name == "s3" {
+			localEndpoints[name] = "http://s3.localhost.localstack.cloud:4566"
+		} else {
+			localEndpoints[name] = localEndpoint
+		}
+	}
+	return localEndpoints
+}
+
 // Client configures and returns a fully initialized AWSClient
 func (c *Config) Client(ctx context.Context) (interface{}, diag.Diagnostics) {
 	awsbaseConfig := awsbase.Config{
@@ -1300,6 +1315,10 @@ func (c *Config) Client(ctx context.Context) (interface{}, diag.Diagnostics) {
 		DNSSuffix = p.DNSSuffix()
 	}

+	// XXX: added by whummer
+	// insert custom endpoints
+	c.Endpoints = GetLocalEndpoints()
+
 	client := &AWSClient{
 		AccessAnalyzerConn:                accessanalyzer.New(sess.Copy(&aws.Config{Endpoint: aws.String(c.Endpoints[AccessAnalyzer])})),
 		AccountConn:                       account.New(sess.Copy(&aws.Config{Endpoint: aws.String(c.Endpoints[Account])})),
diff --git a/internal/provider/provider.go b/internal/provider/provider.go
index 72cd598284..76b15484cc 100644
--- a/internal/provider/provider.go
+++ b/internal/provider/provider.go
@@ -1968,13 +1968,14 @@ func Provider() *schema.Provider {
 }

 func providerConfigure(ctx context.Context, d *schema.ResourceData, terraformVersion string) (interface{}, diag.Diagnostics) {
+
 	config := conns.Config{
 		AccessKey:                      d.Get("access_key").(string),
 		DefaultTagsConfig:              expandProviderDefaultTags(d.Get("default_tags").([]interface{})),
 		CustomCABundle:                 d.Get("custom_ca_bundle").(string),
 		EC2MetadataServiceEndpoint:     d.Get("ec2_metadata_service_endpoint").(string),
 		EC2MetadataServiceEndpointMode: d.Get("ec2_metadata_service_endpoint_mode").(string),
-		Endpoints:                      make(map[string]string),
+		Endpoints:                      conns.GetLocalEndpoints(),  // XXX: added by whummer
 		HTTPProxy:                      d.Get("http_proxy").(string),
 		IgnoreTagsConfig:               expandProviderIgnoreTags(d.Get("ignore_tags").([]interface{})),
 		Insecure:                       d.Get("insecure").(bool),
