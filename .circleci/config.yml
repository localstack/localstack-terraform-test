version: 2.1

orbs:
  go: circleci/go@1.7.1

jobs:
  generate-test-binary:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: large
    steps:
      - checkout
      - go/install:
          version: '1.19'
      - run: git submodule update --init --recursive
      - run:
          name: "Installing prerequisites"
          command: |
            sudo apt-get update
            sudo apt install -y libsasl2-dev
            pip3 install -r requirements.txt

      - run:
          name: "Configuring repos for tests"
          command: |
            cd terraform-provider-aws && go mod vendor
            cd ../
            python3 main.py patch

      - run:
          name: "Generate Testing Binary"
          no_output_timeout: 20m
          command: |
            python3 main.python3 build -s s3
            ls terraform-provider-aws
            ls terraform-provider-aws/test-bin
#            cd terraform-provider-aws
#            go test -c ./internal/service/s3 -o /home/circleci/project/terraform-provider-aws/test-bin/s3.test
#            ls terraform-provider-aws

      - persist_to_workspace:
          root: .
          paths:
            - .

  run-tests:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium
    steps:
      - attach_workspace:
            at: .

      - go/install:
            version: '1.19'

      - run:
          name: "Installing prerequisites"
          command: |
            sudo apt-get update
            sudo apt install -y libsasl2-dev
            pip3 install -r requirements.txt

      - run:
          name: "Run test suite"
          no_output_timeout: 30m
          command: |
            export PYTHONUNBUFFERED=1
            pytest terraform-provider-aws/internal/service/s3 -s -v --ls-start

  generate:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run: touch testfile.txt
      - run: ls
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - attach_workspace:
          at: .
      - run: ls


workflows:
  main:
    when:
      or:
        - equal: [ build, << pipeline.git.branch >> ]
        - equal: [ build-new, << pipeline.git.branch >> ]
        - equal: [ pytest-plugin, << pipeline.git.branch >> ]
    jobs:
      - generate-test-binary
#      - run-tests:
#          requires:
#            - generate-test-binary
