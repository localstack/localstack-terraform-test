version: 2.1

orbs:
  go: circleci/go@1.7.1

jobs:
  generate-test-binary:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: large
    steps:
      - checkout
      - go/install:
          version: '1.19'
      - run: git submodule update --init --recursive
      - run:
          name: "Installing prerequisites"
          command: |
            sudo apt-get update
            sudo apt install -y libsasl2-dev
            pip3 install -r requirements.txt

      - run:
          name: "Configuring repos for tests"
          command: |
            cd terraform-provider-aws && go mod vendor
            cd ../
            python3 main.py patch

      - run:
          name: "Run test suite"
          no_output_timeout: 10m
          command: |
            cd terraform-provider-aws
            go test -c ./internal/service/s3

  run-tests:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium
    steps:
      - checkout
      - go/install:
            version: '1.19'
      - run: git submodule update --init --recursive
      - run:
          name: "Installing prerequisites"
          command: |
            sudo apt-get update
            sudo apt install -y libsasl2-dev
            pip3 install -r requirements.txt

      - run:
          name: "Configuring repos for tests"
          command: |
            cd terraform-provider-aws && go mod vendor
            cd ../
            python3 main.py patch

      - run:
          name: "Run test suite"
          no_output_timeout: 30m
          command: |
            docker-compose up -d
            export TF_ACC=1            
            export AWS_ALTERNATE_ACCESS_KEY_ID=test
            export AWS_ALTERNATE_SECRET_ACCESS_KEY=test
            export AWS_ALTERNATE_REGION=us-east-2
            export AWS_DEFAULT_REGION=eu-west-1
            export AWS_ACCESS_KEY_ID=test
            export AWS_SECRET_ACCESS_KEY=test
            cd terraform-provider-aws
            go test ./internal/service/s3 -test.count 1 -test.v -test.timeout 60m -parallel 4
#            export PYTHONUNBUFFERED=1
#            pytest terraform-provider-aws/internal/service/s3 -s -v --ls-start

  generate:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run: mkdir workspace && cd workspace
      - checkout
      - run: touch testfile.txt
      - run: ls
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - attach_workspace:
          at: .
      - run: ls


workflows:
  main:
    when:
      or:
        - equal: [ build, << pipeline.git.branch >> ]
        - equal: [ build-new, << pipeline.git.branch >> ]
        - equal: [ pytest-plugin, << pipeline.git.branch >> ]
    jobs:
      - generate
      - test:
          requires:
            - generate

