on:
  schedule:
    - cron: '0 19 * * 6'

  # For Testing, remove
  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      services:
        type: string
        required: false
        default: 'ls-all'
        description: name of the service to execute tests for (e.g. "ls-community", "ls-pro", "ls-all", "s3,iam,ec2")
      disable-pro:
        type: boolean
        required: false
        default: false
        description: determine if pro capabilities should be disabled

name: Terraform Tests
jobs:

  prepare_list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - id: set-matrix
        #run: echo "matrix=$(python -m terraform_pytest.get_services ${{ github.event.inputs.services || 'ls-all' }})" >> $GITHUB_OUTPUT
        run: echo "matrix=$(python -m terraform_pytest.get_services 'sqs')" >> $GITHUB_OUTPUT

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test_service:
    needs: prepare_list
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        service_partition: ${{ fromJson(needs.prepare_list.outputs.matrix) }}
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - uses: actions/setup-go@v3
      with:
        go-version: '1.18.x'
        cache: true
        cache-dependency-path: terraform-provider-aws/go.sum

    - name: Set up Python 3.10.5
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.5'
        token: ${{ secrets.GH_GITHUB_COM_TOKEN }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Patch Terraform Provider
      run: |
        source .venv/bin/activate
        cd terraform-provider-aws && go mod vendor
        cd ../
        python -m terraform_pytest.main patch

    - name: Build ${{ matrix.service_partition.service }} Binary
      run: |
        source .venv/bin/activate
        python -m terraform_pytest.main build -s ${{ matrix.service_partition.service }}
        ls -la terraform-provider-aws/test-bin

    - name: Setup LocalStack
      env:
        LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
        TMP_USER: ${{ secrets.TMP_USER }}
        TMP_PW: ${{ secrets.TMP_PW }}
      run: |
        source .venv/bin/activate
        pip install --pre localstack
        if [[ $(test -n ${{ inputs.disable-pro }}) ]]
        then
          echo disable-pro is ${{ inputs.disable-pro }}
          echo pulling community image && docker pull localstack/localstack
        else
          echo pulling pro image && docker pull localstack/localstack-pro
          localstack login -u $TMP_USER -p $TMP_PW  # login is currently required
          localstack extensions init
          localstack extensions install "git+https://github.com/localstack/localstack-moto-test-coverage/#egg=collect-raw-metric-data-extension&subdirectory=collect-raw-metric-data-extension"
        fi

    - name: Run ${{ matrix.service_partition.service }} - ${{ matrix.service_partition.partition }} Tests
      env:
        SERVICE: ${{ matrix.service_partition.service }}
        PARTITION: ${{ matrix.service_partition.partition }}
      run: |
        source .venv/bin/activate
        if [[ ! ${{ inputs.disable-pro }} ]]
        then
          echo "Setting pro key" && export LOCALSTACK_API_KEY=${{ secrets.LOCALSTACK_API_KEY }}
        fi
        if [[ ${{ matrix.service_partition.partition }} == "All" ]] 
        then
          python -m pytest --junitxml=target/reports/pytest.xml terraform-provider-aws/internal/service/${{ matrix.service_partition.service }} -s -v --ls-start --gather-metrics
        else
          python -m pytest --junitxml=target/reports/pytest.xml $(python terraform_pytest/get_tf_partitions.py ${{ matrix.service_partition.service }} ${{ matrix.service_partition.partition }} ) -s -v --ls-start --gather-metrics
        fi

    - name: Archive Test Result
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-metrics
        path: target/reports

    - name: Logout LocalStack
      if: always()
      run: |
        source .venv/bin/activate
        localstack logout

    - name: Publish ${{ matrix.service }} Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        junit_files: target/reports/*.xml
        check_name: ${{ matrix.service }} Terraform Test Results
